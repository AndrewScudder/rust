FROM ubuntu:22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    cmake \
    libssl-dev \
    pkg-config \
    clang \
    llvm \
    libxml2-dev \
    libssl-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    wget \
    ca-certificates \
    xz-utils \
    && rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Add macOS targets
RUN rustup target add x86_64-apple-darwin aarch64-apple-darwin

# Install osxcross (we'll mount the SDK later)
RUN git clone https://github.com/tpoechtrager/osxcross.git /opt/osxcross
WORKDIR /opt/osxcross

# Set up environment for cross-compilation
ENV OSXCROSS_SDK=/opt/osxcross/SDK
ENV OSXCROSS_TARGET=x86_64-apple-darwin
ENV PATH="/opt/osxcross/target/bin:${PATH}"

# Create a build script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "ðŸ”¨ Building for macOS..."\n\
cd /app\n\
\n\
# Build for Intel Mac\n\
echo "Building for Intel Mac (x86_64)..."\n\
cargo build --release --target x86_64-apple-darwin\n\
\n\
# Build for Apple Silicon\n\
echo "Building for Apple Silicon (aarch64)..."\n\
cargo build --release --target aarch64-apple-darwin\n\
\n\
# Create releases directory\n\
mkdir -p releases\n\
\n\
# Copy binaries\n\
cp target/x86_64-apple-darwin/release/timecard releases/timecard-macos-x86_64\n\
cp target/aarch64-apple-darwin/release/timecard releases/timecard-macos-aarch64\n\
\n\
# Make executable\n\
chmod +x releases/timecard-macos-*\n\
\n\
echo "âœ… Build complete!"\n\
ls -la releases/\n\
' > /opt/build.sh && chmod +x /opt/build.sh

WORKDIR /app
CMD ["/opt/build.sh"]
