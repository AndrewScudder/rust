name: Build and Release (Improved)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: timecard
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: timecard
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: timecard
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: timecard.exe

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Create macOS App Bundle
      if: matrix.target == 'x86_64-apple-darwin' || matrix.target == 'aarch64-apple-darwin'
      run: |
        mkdir -p TimeCard.app/Contents/MacOS
        cp target/${{ matrix.target }}/release/timecard TimeCard.app/Contents/MacOS/TimeCard
        chmod +x TimeCard.app/Contents/MacOS/TimeCard
        
        cat > TimeCard.app/Contents/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>TimeCard</string>
            <key>CFBundleIdentifier</key>
            <string>com.andrewscudder.timecard</string>
            <key>CFBundleName</key>
            <string>TimeCard</string>
            <key>CFBundleDisplayName</key>
            <string>TimeCard</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleSignature</key>
            <string>????</string>
            <key>LSMinimumSystemVersion</key>
            <string>10.15</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>LSApplicationCategoryType</key>
            <string>public.app-category.productivity</string>
        </dict>
        </plist>
        EOF
        
        echo "APPL????" > TimeCard.app/Contents/PkgInfo
    
    - name: Complete macOS App Setup
      if: matrix.target == 'x86_64-apple-darwin' || matrix.target == 'aarch64-apple-darwin'
      run: |
        # Remove any quarantine attributes
        xattr -cr TimeCard.app || true
        
        # Self-sign the app bundle
        codesign --force --deep --sign - TimeCard.app
        
        # Verify the signing
        codesign --verify --verbose=4 TimeCard.app
        
        # Ensure executable permissions
        chmod +x TimeCard.app/Contents/MacOS/TimeCard
        
        # Test the app works
        echo "Testing app bundle..."
        TimeCard.app/Contents/MacOS/TimeCard --help || echo "App test completed"
        
        # Create installation script
        cat > install-timecard.sh << 'EOF'
        #!/bin/bash
        echo "🍎 Installing TimeCard..."
        
        # Remove quarantine attributes
        xattr -cr TimeCard.app
        
        # Move to Applications
        sudo mv TimeCard.app /Applications/
        
        # Remove quarantine from Applications
        xattr -cr /Applications/TimeCard.app
        
        echo "✅ TimeCard installed to /Applications/"
        echo "🚀 You can now launch it from Applications folder or Spotlight"
        echo "💡 If you get a security warning, right-click and select 'Open'"
        EOF
        
        chmod +x install-timecard.sh
        
        # Create quick fix script
        cat > fix-timecard.sh << 'EOF'
        #!/bin/bash
        echo "🔧 Quick fix for TimeCard.app..."
        
        # Remove quarantine attributes
        xattr -cr TimeCard.app
        
        # Self-sign again
        codesign --force --deep --sign - TimeCard.app
        
        # Make executable
        chmod +x TimeCard.app/Contents/MacOS/TimeCard
        
        echo "✅ Fixed! Try opening TimeCard.app now"
        echo "💡 If it still shows 'damaged', right-click and select 'Open'"
        EOF
        
        chmod +x fix-timecard.sh
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: timecard-${{ matrix.target }}
        path: ${{ matrix.target == 'x86_64-apple-darwin' && 'TimeCard.app,install-timecard.sh,fix-timecard.sh' || matrix.target == 'aarch64-apple-darwin' && 'TimeCard.app,install-timecard.sh,fix-timecard.sh' || format('target/{0}/release/{1}', matrix.target, matrix.binary_name) }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/timecard-x86_64-unknown-linux-gnu/timecard
          artifacts/timecard-x86_64-apple-darwin/TimeCard.app
          artifacts/timecard-x86_64-apple-darwin/install-timecard.sh
          artifacts/timecard-x86_64-apple-darwin/fix-timecard.sh
          artifacts/timecard-aarch64-apple-darwin/TimeCard.app
          artifacts/timecard-aarch64-apple-darwin/install-timecard.sh
          artifacts/timecard-aarch64-apple-darwin/fix-timecard.sh
          artifacts/timecard-x86_64-pc-windows-msvc/timecard.exe
        tag_name: ${{ github.ref_name }}
        name: TimeCard ${{ github.ref_name }}
        body: |
          TimeCard v${{ github.ref_name }} - Time tracking application with GUI
          
          ## Downloads
          - **Linux (x86_64)**: timecard
          - **macOS Intel**: TimeCard.app + install scripts
          - **macOS Apple Silicon**: TimeCard.app + install scripts
          - **Windows**: timecard.exe
          
          ## macOS Installation
          1. Download TimeCard.app for your Mac type
          2. Run: `./install-timecard.sh` (moves to Applications)
          3. Or run: `./fix-timecard.sh` (fixes security issues)
          
          ## Usage
          ```bash
          # CLI mode
          ./timecard --help
          
          # GUI mode
          ./timecard gui
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
